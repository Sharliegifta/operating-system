// Task 4: Shortest Job First Scheduling
#include <stdio.h>

struct Process {
    int id;
    int burstTime;
};

void findavgTime(struct Process proc[], int n) {
    int wait[n], turnAround[n];
    wait[0] = 0;

    for (int i = 1; i < n; i++) {
        wait[i] = wait[i - 1] + proc[i - 1].burstTime;
    }

    for (int i = 0; i < n; i++) {
        turnAround[i] = proc[i].burstTime + wait[i];
    }

    float totalWait = 0, totalTurnAround = 0;
    for (int i = 0; i < n; i++) {
        totalWait += wait[i];
        totalTurnAround += turnAround[i];
    }
    printf("Average waiting time: %.2f\n", totalWait / n);
    printf("Average turnaround time: %.2f\n", totalTurnAround / n);
}

int main() {
    struct Process proc[] = { {1, 6}, {2, 8}, {3, 7}, {4, 3} };
    int n = sizeof(proc) / sizeof(proc[0]);
    findavgTime(proc, n);
    return 0;
}
