// Task 17: Deadlock Avoidance using Banker's Algorithm
#include <stdio.h>

#define P 5
#define R 3

int main() {
    int max[P][R], allot[P][R], need[P][R], avail[R];
    int finish[P] = {0}, safeSeq[P];
    int count = 0;

    // Initialize max, allot, avail, etc.
    // (Omitted for brevity)

    // Banker's Algorithm implementation
    // (Omitted for brevity)

    printf("Safe sequence is: ");
    for (int i = 0; i < P; i++) {
        printf("%d ", safeSeq[i]);
    }
    printf("\n");
    return 0;
}
